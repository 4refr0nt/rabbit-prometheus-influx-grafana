server {
    listen 443 ssl;
    server_name iotm.tk;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/iotm.tk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/iotm.tk/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    root /var/www/certbot;

    index index.html;

    location / {
        autoindex off;
    }

    location /manager/portainer/ {
        rewrite  ^/manager/portainer/(.*)  /$1 break;
	    proxy_pass http://portainer:9000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-Ip $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /manager/rabbit/ {
        if ($request_uri ~* "/manager/rabbit/(.*)") {
            proxy_pass http://rabbit:15672/$1;
        }
        proxy_pass http://rabbit:15672;                         
        proxy_buffering                     off;
        proxy_set_header Host               $http_host;
        proxy_set_header X-Real-Ip          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
    }

    location /manager/grafana/ {
        proxy_pass http://grafana:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_max_temp_file_size 0;
        proxy_set_header Authorization "";
    }

}

server {
    listen 80;
    server_name iotm.tk;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}
